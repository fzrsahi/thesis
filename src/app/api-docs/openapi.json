{
  "openapi": "3.0.0",
  "info": {
    "title": "Thesis API",
    "description": "API documentation for the thesis project",
    "version": "0.1.0",
    "contact": {
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "API server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Returns a list of all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "description": "Creates a new user in the system",
        "operationId": "createUser",
        "requestBody": {
          "description": "User object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Returns a single user by ID",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to return",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Updates an existing user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "User object with updated values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Deletes a user by ID",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "summary": "Get dashboard data",
        "description": "Returns dashboard statistics and information",
        "operationId": "getDashboard",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dashboard"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the user"
          },
          "username": {
            "type": "string",
            "description": "Username for the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the user was created"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the user was last updated"
          }
        },
        "required": ["id", "username", "email", "createdAt", "updatedAt"]
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username for the user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user"
          },
          "fullName": {
            "type": "string",
            "description": "Full name of the user"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password for the user account"
          }
        },
        "required": ["username", "email", "password"]
      },
      "Dashboard": {
        "type": "object",
        "properties": {
          "userCount": {
            "type": "integer",
            "description": "Total number of users in the system"
          },
          "activeUsers": {
            "type": "integer",
            "description": "Number of active users"
          },
          "recentActivity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Activity"
            },
            "description": "Recent activity in the system"
          },
          "statistics": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            },
            "description": "Various system statistics"
          }
        }
      },
      "Activity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier for the activity"
          },
          "userId": {
            "type": "string",
            "format": "uuid",
            "description": "ID of the user who performed the activity"
          },
          "action": {
            "type": "string",
            "description": "Type of action performed"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the activity occurred"
          },
          "details": {
            "type": "object",
            "description": "Additional details about the activity"
          }
        },
        "required": ["id", "userId", "action", "timestamp"]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
