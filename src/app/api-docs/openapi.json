{
  "openapi": "3.0.0",
  "info": {
    "title": "Thesis API",
    "description": "API documentation for Fazrul Anugrah Sahidin's thesis project",
    "version": "0.1.0",
    "contact": {
      "email": "fazrul.anugrah@gmail.com"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "API server"
    }
  ],
  "paths": {
    "/auth/session": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get session information",
        "description": "Retrieve session information for the authenticated user",
        "operationId": "getSession",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved session information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "student"
                        },
                        "email": {
                          "type": "string",
                          "example": "student@gmail.com"
                        },
                        "id": {
                          "type": "string",
                          "example": "1"
                        },
                        "role": {
                          "type": "string",
                          "example": "student"
                        }
                      },
                      "required": ["name", "email", "id", "role"]
                    },
                    "expires": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2025-07-03T14:08:10.770Z"
                    }
                  },
                  "required": ["user", "expires"]
                }
              }
            }
          }
        }
      }
    },
    "/my-recommendation": {
      "get": {
        "tags": ["Recommendation"],
        "summary": "Get personalized competition recommendations",
        "description": "Fetches personalized recommendations for the logged-in student, processed in the background using LLM and RAG.",
        "operationId": "getMyRecommendations",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved recommendations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Recommendation"],
        "summary": "Generate student recommendation",
        "description": "Generate a new recommendation for the student",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Recommendation generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students": {
      "get": {
        "tags": ["Student"],
        "summary": "Get student list with filter",
        "description": "Get all students, optionally filtered by query parameters such as name, email, or studentId",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/KeywordsParam" }
        ],
        "responses": {
          "200": {
            "description": "List of students retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "number" },
                          "name": { "type": "string" },
                          "email": { "type": "string" },
                          "studentId": { "type": "string" }
                        }
                      }
                    },
                    "pagination": { "$ref": "#/components/schemas/Pagination" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Student"],
        "summary": "Create student",
        "description": "Create a new student",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "studentId": { "type": "string" }
                },
                "required": ["name", "email", "studentId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Student created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": { "type": "string" },
                        "email": { "type": "string" },
                        "studentId": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students/{id}": {
      "get": {
        "tags": ["Student"],
        "summary": "Get student",
        "description": "Get a student",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Student retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer" },
                        "user": {
                          "type": "object",
                          "properties": {
                            "name": { "type": "string" },
                            "email": { "type": "string" }
                          }
                        },
                        "studentId": { "type": ["string", "null"] },
                        "transcript": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "integer" },
                              "fileId": { "type": "string" },
                              "semester": { "type": "string" },
                              "transcriptText": { "type": "string" },
                              "fileUrl": { "type": "string" }
                            }
                          }
                        },
                        "achievements": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "integer" },
                              "studentId": { "type": "integer" },
                              "title": { "type": "string" },
                              "description": { "type": "string" },
                              "date": { "type": "string", "format": "date-time" },
                              "createdAt": { "type": "string", "format": "date-time" }
                            }
                          }
                        },
                        "experiences": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "integer" },
                              "organization": { "type": "string" },
                              "position": { "type": "string" },
                              "startDate": { "type": "string", "format": "date-time" },
                              "endDate": { "type": "string", "format": "date-time" },
                              "description": { "type": "string" }
                            }
                          }
                        },
                        "gpa": { "type": "string" },
                        "interests": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "skills": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "createdAt": { "type": "string", "format": "date-time" },
                        "updatedAt": { "type": "string", "format": "date-time" },
                        "recommendations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": { "type": "integer" },
                              "studentId": { "type": "integer" },
                              "prompt": { "type": "string" },
                              "studentSummary": { "type": "string" },
                              "overallAssessment": { "type": "string" },
                              "competitionRecommendations": {
                                "type": "array",
                                "items": { "type": "object" }
                              },
                              "developmentSuggestions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "integer" },
                                    "type": { "type": "string" },
                                    "title": { "type": "string" },
                                    "link": { "type": "string" },
                                    "reason": { "type": "string" }
                                  }
                                }
                              },
                              "skillsProfiles": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": { "type": "integer" },
                                    "skillName": { "type": "string" },
                                    "score": { "type": "number" },
                                    "breakdown": { "type": "string" }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Student"],
        "summary": "Update student",
        "description": "Update a student"
      },
      "delete": {
        "tags": ["Student"],
        "summary": "Delete student",
        "description": "Delete a student",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "minimum": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "Student deleted successfully"
          }
        }
      }
    },
    "/students/personal-data": {
      "get": {
        "tags": ["Student"],
        "summary": "Get student personal data",
        "description": "Retrieve current student's personal profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Student personal data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "studentId": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Student"],
        "summary": "Update student personal data",
        "description": "Update student's personal profile information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentPersonalDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student personal data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/StudentPersonalData"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students/academic-data": {
      "get": {
        "tags": ["Student"],
        "summary": "Get student academic data",
        "description": "Retrieve all academic information for the current student including achievements and memberships",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Student academic data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/StudentAcademicData"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Student"],
        "summary": "Update student academic data",
        "description": "Update student's academic information including achievements and memberships",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StudentAcademicDataUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Student academic data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/StudentAcademicData"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students/transcript": {
      "post": {
        "tags": ["Student"],
        "summary": "Upload student transcript",
        "description": "Upload student's transcript file",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "transcript": {
                    "type": "string",
                    "format": "binary",
                    "description": "Transcript file upload (PDF format)"
                  },
                  "semester": {
                    "type": "string",
                    "description": "Semester of the transcript"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Student"],
        "summary": "Get student transcripts",
        "description": "Get all transcripts for the current student",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved transcripts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "semester": {
                            "type": "string"
                          },
                          "fileUrl": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "pagination": { "$ref": "#/components/schemas/Pagination" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students/transcript/{id}": {
      "delete": {
        "tags": ["Student"],
        "summary": "Delete student transcript",
        "description": "Delete a transcript for the current student",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transcript deleted successfully"
          }
        }
      }
    },
    "/competitions": {
      "post": {
        "tags": ["Competition"],
        "summary": "Create competition",
        "description": "Create a new competition",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateCompetitionResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Competition created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Competition"],
        "summary": "Get competition list",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/KeywordsParam" }
        ],
        "description": "Get all competitions",
        "responses": {
          "200": {
            "description": "Competition list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Competition" }
                    },
                    "pagination": { "$ref": "#/components/schemas/Pagination" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/competitions/{id}": {
      "delete": {
        "tags": ["Competition"],
        "summary": "Delete competition by ID",
        "description": "Delete a competition by its ID.",
        "operationId": "deleteCompetitionById",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "minimum": 1 },
            "description": "Competition ID"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": { "success": { "type": "boolean", "example": true } }
                }
              }
            },
            "description": "Competition deleted successfully"
          }
        }
      },
      "get": {
        "tags": ["Competition"],
        "summary": "Get competition by ID",
        "description": "Retrieve a single competition in detail by its ID.",
        "operationId": "getCompetitionById",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer", "minimum": 1 },
            "description": "Competition ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Competition retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": { "$ref": "#/components/schemas/CompetitionDetail" }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "Competition not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/competitions/generate": {
      "post": {
        "tags": ["Competition"],
        "summary": "Generate competition",
        "description": "Generate a new competition",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "website": {
                    "type": "string"
                  },
                  "additionalDetails": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Optional file upload"
                  },
                  "startPage": {
                    "type": "integer",
                    "description": "Starting page number (optional, only if file is provided)"
                  },
                  "endPage": {
                    "type": "integer",
                    "description": "Ending page number (optional, only if file is provided)"
                  }
                },
                "required": ["title", "description", "website"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Competition generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/GenerateCompetitionResponse"
                    }
                  },
                  "required": ["success", "data"]
                }
              }
            }
          }
        }
      }
    },
    "/advisors": {
      "get": {
        "tags": ["Advisor"],
        "summary": "Get advisor list",
        "description": "Get all advisors with optional pagination and keyword search",
        "parameters": [
          { "$ref": "#/components/parameters/PageParam" },
          { "$ref": "#/components/parameters/LimitParam" },
          { "$ref": "#/components/parameters/KeywordsParam" }
        ],
        "responses": {
          "200": {
            "description": "Advisor list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true },
                    "data": {
                      "type": "array",
                      "items": { "$ref": "#/components/schemas/Advisor" }
                    },
                    "pagination": { "$ref": "#/components/schemas/Pagination" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Advisor"],
        "summary": "Create advisor",
        "description": "Create a new advisor",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AdvisorCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Advisor created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/advisors/{id}": {
      "delete": {
        "tags": ["Advisor"],
        "summary": "Delete advisor",
        "description": "Delete an advisor by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "responses": {
          "200": {
            "description": "Advisor deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean", "example": true }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Advisor not found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "tags": ["Chat"],
        "summary": "Chat with LLM (streaming)",
        "description": "Chat with advisor. The response is streamed via Server-Sent Events (SSE).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ChatRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SSE stream of chat messages. Each event contains incremental assistant output.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "example": "event: message\ndata: {\"id\":\"msg_1\",\"content\":\"Halo!\"}\n\n"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Chat"],
        "summary": "Get last chat messages",
        "description": "Get the last 10 chat messages for the current user (from the latest session).",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of last chat messages",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string", "example": "m_123" },
                          "role": { "type": "string", "enum": ["user", "ai"], "example": "user" },
                          "content": {
                            "type": "string",
                            "example": "Halo, ada yang bisa saya bantu?"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-06-01T12:00:00.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "PageParam": {
        "name": "page",
        "in": "query",
        "description": "Page number (1-based)",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "Items per page",
        "required": false,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "default": 10
        }
      },
      "KeywordsParam": {
        "name": "keywords",
        "in": "query",
        "description": "Free-text search keywords",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Pagination": {
        "type": "object",
        "properties": {
          "total": { "type": "integer", "example": 100 },
          "page": { "type": "integer", "example": 1 },
          "limit": { "type": "integer", "example": 10 },
          "totalPages": { "type": "integer", "example": 10 },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPrevPage": { "type": "boolean", "example": false }
        },
        "required": ["total", "page", "limit", "totalPages", "hasNextPage", "hasPrevPage"]
      },
      "Advisor": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "userId": { "type": "integer" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "userId", "createdAt", "updatedAt"]
      },
      "AdvisorCreate": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" }
        },
        "required": ["userId"]
      },
      "AdvisorUpdate": {
        "type": "object",
        "properties": {
          "userId": { "type": "integer" }
        }
      },
      "Competition": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "organizer": { "type": "string", "nullable": true },
          "field": {
            "type": "array",
            "items": { "type": "string" }
          },
          "type": { "type": "string", "nullable": true },
          "startDate": { "type": "string", "format": "date-time", "nullable": true },
          "endDate": { "type": "string", "format": "date-time", "nullable": true }
        }
      },
      "CompetitionDetail": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "field": { "type": "array", "items": { "type": "string" } },
          "type": { "type": "string", "nullable": true },
          "minGPA": { "type": "string", "nullable": true },
          "requirements": { "type": "object", "nullable": true, "additionalProperties": true },
          "startDate": { "type": "string", "format": "date-time", "nullable": true },
          "endDate": { "type": "string", "format": "date-time", "nullable": true },
          "location": { "type": "string", "nullable": true },
          "organizer": { "type": "string", "nullable": true },
          "evaluationCriteria": {
            "type": "object",
            "nullable": true,
            "additionalProperties": true
          },
          "sourceUrl": { "type": "string", "nullable": true },
          "relevantCourses": { "type": "array", "items": { "type": "string" } },
          "relevantSkills": { "type": "array", "items": { "type": "string" } },
          "fileId": { "type": "string", "nullable": true },
          "content": { "type": "string", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        },
        "required": ["id", "title", "description", "field", "createdAt", "updatedAt"]
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/RecommendationResponse"
          }
        },
        "required": ["success", "data"]
      },
      "GenerateCompetitionResponse": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The exact name of the competition",
            "example": "LIDM 2025 - Inovasi Teknologi Digital Pendidikan (Divisi1)"
          },
          "description": {
            "type": "string",
            "description": "A brief overview of the competition's purpose and scope"
          },
          "field": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The primary domain(s) of the competition",
            "example": ["Educational Technology", "Software Development"]
          },
          "type": {
            "type": "string",
            "nullable": true,
            "description": "Indicates whether participants compete solo or in groups"
          },
          "minGPA": {
            "type": "string",
            "nullable": true,
            "description": "Minimum GPA requirement for eligibility, if specified; otherwise, null"
          },
          "requirements": {
            "type": "object",
            "properties": {
              "teamComposition": {
                "type": "string",
                "nullable": true,
                "description": "Details on team size and composition",
                "example": "3-5 students from the same university"
              },
              "originality": {
                "type": "string",
                "nullable": true,
                "description": "Rules about the originality of submissions",
                "example": "Work must be original"
              },
              "other": {
                "type": "string",
                "nullable": true,
                "description": "Additional eligibility criteria",
                "example": "Must submit a proposal"
              }
            },
            "required": ["teamComposition", "originality", "other"]
          },
          "startDate": {
            "type": "string",
            "nullable": true,
            "description": "The competition's start or registration date (YYYY-MM-DD format)",
            "example": "2025-01-01"
          },
          "endDate": {
            "type": "string",
            "nullable": true,
            "description": "The competition's end or final date (YYYY-MM-DD format)",
            "example": "2025-01-01"
          },
          "location": {
            "type": "string",
            "nullable": true,
            "description": "The event's location, e.g., 'Online' or a specific city/university; null if unspecified"
          },
          "organizer": {
            "type": "string",
            "nullable": true,
            "description": "The organizing entity",
            "example": "Ministry of Education"
          },
          "evaluationCriteria": {
            "type": "object",
            "properties": {
              "preliminaryRound": {
                "type": "string",
                "nullable": true,
                "description": "Criteria for initial judging",
                "example": "Originality: 30%, Impact: 30%"
              },
              "finalRound": {
                "type": "string",
                "nullable": true,
                "description": "Criteria for final judging",
                "example": "Presentation and functionality"
              },
              "other": {
                "type": "string",
                "nullable": true,
                "description": "Other evaluation criteria"
              }
            },
            "required": ["preliminaryRound", "finalRound", "other"]
          },
          "competitionStatistics": {
            "type": "object",
            "properties": {
              "summary": {
                "type": "string",
                "nullable": true,
                "description": "A brief overview of historical participation data, including years and sources"
              },
              "totalApplicantsPastYear": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "nullable": true,
                      "description": "Number of teams or individuals who applied in the specified year"
                    },
                    "year": {
                      "type": "string",
                      "nullable": true,
                      "description": "The year of the applicant data",
                      "example": "2023"
                    }
                  },
                  "required": ["count", "year"]
                }
              },
              "pastUngParticipants": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "year": {
                      "type": "string",
                      "description": "Year of participation"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the participant from UNG"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of team members or 1 if individual"
                    }
                  },
                  "required": ["year", "name", "count"]
                }
              }
            },
            "required": [
              "summary",
              "totalApplicantsPastYear",
              "finalistCountPastYear",
              "pastUngParticipants"
            ]
          },
          "sourceUrl": {
            "type": "string",
            "description": "The primary website or document URL for the competition"
          },
          "relevantCourses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Academic courses directly relevant to the competition's technical or non-technical focus",
            "example": ["Software Engineering", "Instructional Design"]
          },
          "relevantSkills": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Skills directly relevant to the competition's technical or non-technical requirements",
            "example": ["Python", "Instructional Design"]
          }
        },
        "required": [
          "title",
          "description",
          "field",
          "type",
          "minGPA",
          "requirements",
          "startDate",
          "endDate",
          "location",
          "organizer",
          "evaluationCriteria",
          "competitionStatistics",
          "sourceUrl",
          "relevantCourses",
          "relevantSkills"
        ]
      },
      "RecommendationResponse": {
        "type": "object",
        "properties": {
          "student": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "student"
              },
              "email": {
                "type": "string",
                "example": "student@gmail.com"
              }
            },
            "required": ["name", "email"],
            "description": "Basic student information"
          },
          "result": {
            "type": "object",
            "properties": {
              "studentSummary": {
                "type": "string",
                "description": "Comprehensive summary of the student's academic and professional background",
                "example": "Mahasiswa Teknik Informatika dengan IPK 3.66, menonjol dalam penguasaan pemrograman, pengelolaan sistem, dan teknologi berbasis data. Berpengalaman sebagai Software Developer di Jepang dan beberapa magang sebelumnya. Memiliki minat utama di bidang Programming, Backend Development, dan Software Engineering."
              },
              "skillsProfile": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "score": {
                      "type": "number",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 1
                    },
                    "breakdown": {
                      "type": "string"
                    }
                  },
                  "required": ["score", "breakdown"]
                },
                "example": {
                  "technicalExpertise": {
                    "score": 0.85,
                    "breakdown": "Memiliki pengalaman kerja nyata sebagai Software Developer di Jepang dan magang di Ditjen Diktiristek serta Thinkspedia. Berhasil mengembangkan backend sistem kompleks dan meningkatkan performa unit testing hingga 90%."
                  },
                  "scientificWriting": {
                    "score": 0.5,
                    "breakdown": "Belum ada pengalaman dalam publikasi ilmiah atau proposal yang didanai. Namun, mampu menyusun laporan kerja praktik dengan baik."
                  }
                },
                "description": "Detailed skill profile with scores and explanations"
              },
              "overallAssessment": {
                "type": "object",
                "properties": {
                  "strengths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Kemampuan teknis yang sangat baik dalam pengembangan backend.",
                      "Kemandirian belajar sangat tinggi.",
                      "Kemampuan problem solving yang solid dalam konteks teknis."
                    ]
                  },
                  "weaknesses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "Minim pengalaman dalam penulisan ilmiah.",
                      "Kurangnya paparan dalam design thinking.",
                      "Belum ada pengalaman dalam kewirausahaan dan bisnis."
                    ]
                  }
                },
                "required": ["strengths", "weaknesses"],
                "description": "Overall assessment of student's profile"
              },
              "recommendations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 5
                    },
                    "competitionName": {
                      "type": "string",
                      "example": "Program Kreativitas Mahasiswa bidang Karsa Cipta"
                    },
                    "rank": {
                      "type": "integer",
                      "example": 1
                    },
                    "matchScore": {
                      "type": "object",
                      "properties": {
                        "score": {
                          "type": "number",
                          "format": "float",
                          "minimum": 0,
                          "maximum": 1,
                          "example": 0.78
                        },
                        "reason": {
                          "type": "string",
                          "example": "Mahasiswa memiliki kemampuan teknis yang kuat dan pengalaman dalam pengembangan prototipe yang mendukung kesuksesan di kompetisi ini. Namun, perlu meningkatkan kreativitas dan kemampuan menulis ilmiah untuk mendukung laporan."
                        }
                      },
                      "required": ["score", "reason"]
                    },
                    "skillRequirements": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "weight": {
                            "type": "number",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 1
                          },
                          "breakdown": {
                            "type": "string"
                          }
                        },
                        "required": ["weight", "breakdown"]
                      },
                      "example": {
                        "technicalExpertise": {
                          "weight": 0.8,
                          "breakdown": "Kompetisi ini memerlukan kemampuan teknis tinggi untuk merancang dan membangun prototipe yang inovatif."
                        }
                      }
                    },
                    "reasoning": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "type": "string",
                          "example": "Kompetisi ini sesuai dengan kekuatan teknis mahasiswa dan memberikan peluang untuk mengasah kreativitas serta kemampuan ilmiah."
                        },
                        "pros": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Kemampuan teknis mahasiswa mendukung pembangunan prototipe.",
                            "Pengalaman dalam tim relevan dengan kebutuhan kerja sama kompetisi."
                          ]
                        },
                        "cons": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Kurangnya pengalaman dalam kreativitas tingkat tinggi.",
                            "Minimnya pengalaman dalam penulisan laporan ilmiah."
                          ]
                        }
                      },
                      "required": ["summary", "pros", "cons"]
                    },
                    "keyFactors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Kemampuan teknis dalam prototyping.",
                        "Kreativitas dalam menghasilkan ide inovatif.",
                        "Kemampuan menyusun laporan akhir yang berkualitas."
                      ]
                    },
                    "preparationTips": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Ikuti pelatihan penulisan ilmiah untuk meningkatkan kualitas laporan.",
                        "Latih brainstorming untuk meningkatkan kreativitas ide.",
                        "Perkuat kerja sama tim dengan simulasi proyek bersama."
                      ]
                    },
                    "competition": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string",
                          "example": "PKM KC adalah singkatan dari Program Kreativitas Mahasiswa bidang Karsa Cipta. Ini adalah salah satu jenis Program Kreativitas Mahasiswa (PKM) yang diselenggarakan oleh Direktorat Pembelajaran dan Kemahasiswaan, Direktorat Jenderal Pendidikan Tinggi, Kementerian Pendidikan dan Kebudayaan (Kemendikbud) Republik Indonesia."
                        },
                        "field": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": ["Semua bidang keilmuan"]
                        },
                        "type": {
                          "type": "string",
                          "example": "Rancang Bangun Prototipe"
                        },
                        "minGPA": {
                          "type": "string",
                          "example": ""
                        },
                        "location": {
                          "type": "string",
                          "example": "Daring dan Luring (Hybrid)"
                        },
                        "organizer": {
                          "type": "string",
                          "example": "Direktorat Pembelajaran dan Kemahasiswaan, Direktorat Jenderal Pendidikan Tinggi, Kementerian Pendidikan dan Kebudayaan (Kemendikbud) Republik Indonesia"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true,
                          "example": null
                        },
                        "sourceUrl": {
                          "type": "string",
                          "example": "simbelmawa.kemdikbud.go.id"
                        },
                        "relevantCourses": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Kewirausahaan",
                            "Teknik Mesin",
                            "Teknik Elektro",
                            "Teknik Informatika"
                          ]
                        },
                        "relevantSkills": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Rancang Bangun",
                            "Problem Solving",
                            "Kreativitas",
                            "Kerja Tim"
                          ]
                        },
                        "requirements": {
                          "type": "object",
                          "nullable": true,
                          "example": {
                            "other": null,
                            "originality": null,
                            "teamComposition": null
                          }
                        },
                        "evaluationCriteria": {
                          "type": "object",
                          "nullable": true,
                          "example": {
                            "other": "Kelengkapan laporan akhir.",
                            "finalRound": "Kualitas prototipe, penguasaan materi, dan presentasi.",
                            "preliminaryRound": "Kreativitas, keaslian ide, dan potensi implementasi."
                          }
                        },
                        "competitionStats": {
                          "type": "object",
                          "properties": {
                            "summary": {
                              "type": "string",
                              "nullable": true,
                              "description": "A brief overview of historical participation data, including years and sources"
                            },
                            "totalApplicantsPastYear": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "Number of teams or individuals who applied in the specified year"
                                  },
                                  "year": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The year of the applicant data",
                                    "example": "2023"
                                  }
                                },
                                "required": ["count", "year"]
                              }
                            },
                            "pastUngParticipants": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "year": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Year of participation"
                                  },
                                  "name": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Name of the participant from UNG"
                                  },
                                  "count": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "Number of team members or 1 if individual"
                                  }
                                },
                                "required": ["year", "name", "count"]
                              }
                            }
                          },
                          "required": ["totalApplicantsPastYear", "pastUngParticipants"]
                        }
                      },
                      "required": [
                        "description",
                        "field",
                        "type",
                        "minGPA",
                        "location",
                        "organizer",
                        "startDate",
                        "endDate",
                        "sourceUrl",
                        "relevantCourses",
                        "relevantSkills",
                        "requirements",
                        "evaluationCriteria",
                        "competitionStats"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "competitionName",
                    "rank",
                    "matchScore",
                    "skillRequirements",
                    "reasoning",
                    "keyFactors",
                    "preparationTips",
                    "competition"
                  ]
                },
                "description": "List of recommended competitions"
              },
              "developmentSuggestions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["course", "practice", "certification"],
                      "example": "course"
                    },
                    "title": {
                      "type": "string",
                      "example": "Introduction to Scientific Writing"
                    },
                    "link": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.coursera.org/learn/scientific-writing"
                    },
                    "reason": {
                      "type": "string",
                      "example": "Untuk meningkatkan kemampuan mahasiswa dalam menyusun laporan akhir yang berkualitas."
                    }
                  },
                  "required": ["type", "title", "link", "reason"]
                },
                "description": "Development suggestions for skill improvement"
              }
            },
            "required": [
              "studentSummary",
              "skillsProfile",
              "overallAssessment",
              "recommendations",
              "developmentSuggestions"
            ]
          }
        },
        "required": ["student", "result"]
      },
      "StudentPersonalData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "studentId": {
            "type": "string"
          },
          "major": {
            "type": "string"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StudentPersonalDataUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "studentId": {
            "type": "string"
          }
        }
      },
      "StudentAcademicData": {
        "type": "object",
        "properties": {
          "gpa": {
            "type": "string"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "skills": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Achievement"
            }
          },
          "experiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Experience"
            }
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ChatResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "StudentAcademicDataUpdate": {
        "type": "object",
        "properties": {
          "gpa": {
            "type": "string"
          },
          "interests": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "achievements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AchievementCreate"
            }
          },
          "experiences": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperienceCreate"
            }
          }
        }
      },
      "Achievement": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "AchievementCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          }
        },
        "required": ["title", "description", "date"]
      },
      "Experience": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organization": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ExperienceCreate": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["organization", "position", "startDate", "description"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
